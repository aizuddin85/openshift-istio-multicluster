---
- name: get istio-multi service account secret name
  command: oc --context {{ cluster.context }} get sa istio-multi -n istio-system -o jsonpath='{.secrets[1].name}'
  register: secret_name

- name: get ca_data
  command: oc --context {{ cluster.context }} get secret {{ secret_name.stdout }} -n istio-system -o "jsonpath={.data['ca\.crt']}"
  register: ca_data
  
- name: get token
  shell: oc --context {{ cluster.context }} get secret {{ secret_name.stdout }} -n istio-system -o "jsonpath={.data['token']}" | base64 --decode
  register: token   

- name: process kubeconfig-secret template
  template:
    src: kubeconfig-secret.yaml.j2
    dest: "/tmp/kube-config-secret-{{ cluster.name }}"    
    
- name: create kubeconfig secret
  command: oc --context {{ (clusters | selectattr('istio_control_plane') | list)[0].context }} apply -f /tmp/kube-config-secret-{{ cluster.name }}